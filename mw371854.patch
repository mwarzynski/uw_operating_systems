diff -rupN /usr/src/minix/fs/mfs/read.c /usr/src/new_minix/fs/mfs/read.c
--- /usr/src/minix/fs/mfs/read.c	2017-05-31 00:11:25.051133211 +0200
+++ /usr/src/new_minix/fs/mfs/read.c	2017-05-31 09:11:51.564125507 +0200
@@ -269,6 +269,31 @@ int *completed;			/* number of bytes cop
 		}
 		return r;
 	} else {
+         // create buffer to get data from user space and be able to check if it's filled with zeros
+         char *buffer = calloc(sizeof(char), block_size);
+
+         if (buffer == NULL)
+             panic("MFS, rw_chunk: allocating memory for checking if block is empty");
+
+         // copy bytes from user space to buffer
+         int r = sys_safecopyfrom(VFS_PROC_NR, gid, (vir_bytes) buf_off, 
+                                  (vir_bytes) (buffer), (size_t) chunk);
+
+         if (r != OK)
+            printf("MFS: sys_safecopyfrom failed\n");
+
+         // check if buffer is filled with zeros
+         int is_empty = 1;
+         for (int i = 0; is_empty && i < block_size; i++) {
+            if (buffer[i] != 0)
+                is_empty = 0;
+         }
+
+         free(buffer);
+
+         if (is_empty)
+            return r;
+ 
 		/* Writing to or peeking a nonexistent block.
 		 * Create and enter in inode.
 		 */
